{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["boardSize","GobangTitle","styled","div","Wrapper","Square","props","frameColor","BoardFrame","FakeBoardFrame","emptyArray","i","push","fakeEmptyArray","blackStoneIcon","whiteStoneIcon","BlackStone","WhiteStone","FakeRow","map","FakeBoard","Row","indexOfY","onHandleOnclick","gobang","indexOfX","coordinate","onClick","stone","x","y","blackStone","Board","index","countStones","currentStone","line","diagonal","direction","horizontal","border","pointOnAxis","pointOnAltAxis","jLimit","j","targetPoint","targetAltPoint","filter","length","App","useState","setGobang","useRef","BlackIsnNext","setBlackIsNext","useEffect","checkWin","lineLeft","lineRight","alert","current","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.947a8e2c.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from \"react\"\nimport styled from \"styled-components\"\n\nconst boardSize = 19\n\nconst GobangTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 1rem auto;\n`\nconst Square = styled.div`\n  display: table-cell;\n  border: 1px solid ${(props) => props.frameColor || \"black\"};\n  height: 1.5rem;\n  width: 1.5rem;\n`\nconst BoardFrame = styled.div`\n  min-width: ${boardSize * 1.5}rem;\n  min-height: ${boardSize * 1.5}rem;\n  margin: 1rem;\n  position: relative;\n  z-index: 1;\n  background: #ccad3317;\n`\nconst FakeBoardFrame = styled.div`\n  min-width: ${(boardSize - 1) * 1.5}rem;\n  min-height: ${(boardSize - 1) * 1.5}rem;\n  margin: 1.75rem;\n  position: absolute;\n`\n\nconst emptyArray = []\nfor (let i = 0; i < boardSize; i++) {\n  emptyArray.push(i)\n}\nconst fakeEmptyArray = []\nfor (let i = 0; i < boardSize - 1; i++) {\n  fakeEmptyArray.push(i)\n}\n\nconst blackStoneIcon = `üåë`\nconst whiteStoneIcon = `‚òÄÔ∏è`\n\nconst BlackStone = () => {\n  return <div>{blackStoneIcon}</div>\n}\n\nconst WhiteStone = () => {\n  return <div>{whiteStoneIcon}</div>\n}\nconst FakeRow = () => {\n  return (\n    <div>\n      {fakeEmptyArray.map(() => (\n        <Square />\n      ))}\n    </div>\n  )\n}\nconst FakeBoard = () => {\n  return (\n    <FakeBoardFrame>\n      {fakeEmptyArray.map(() => (\n        <FakeRow />\n      ))}\n    </FakeBoardFrame>\n  )\n}\n\nconst Row = ({ indexOfY, onHandleOnclick, gobang }) => {\n  return (\n    <div>\n      {emptyArray.map((indexOfX) => (\n        <Square\n          key={indexOfX}\n          coordinate={{ indexOfX, indexOfY }}\n          onClick={() => {\n            onHandleOnclick(indexOfX, indexOfY)\n          }}\n          frameColor=\"transparent\"\n        >\n          {gobang.map((stone) => {\n            return (\n              stone.x === indexOfX &&\n              stone.y === indexOfY &&\n              (stone.blackStone ? <BlackStone /> : <WhiteStone />)\n            )\n          })}\n        </Square>\n      ))}\n    </div>\n  )\n}\n\nconst Board = ({ onHandleOnclick, gobang }) => {\n  return (\n    <BoardFrame>\n      {emptyArray.map((index) => (\n        <Row\n          key={index}\n          indexOfY={index}\n          onHandleOnclick={onHandleOnclick}\n          gobang={gobang}\n        />\n      ))}\n    </BoardFrame>\n  )\n}\n\nconst countStones = (\n  currentStone,\n  gobang,\n  line,\n  [direction, horizontal],\n  diagonal\n) => {\n  let border = direction > 0 ? boardSize - 1 : 0\n  const pointOnAxis = horizontal ? currentStone.x : currentStone.y\n  const pointOnAltAxis = horizontal ? currentStone.y : currentStone.x\n  const borderCond =\n    direction > 0\n      ? pointOnAxis + 4 * direction <= border\n      : pointOnAxis + 4 * direction >= border\n\n  const jLimit = borderCond ? 5 * direction : border - pointOnAxis * direction\n  for (\n    let j = direction;\n    direction > 0 ? j < jLimit : j > jLimit;\n    j += direction\n  ) {\n    let targetPoint = pointOnAxis + j\n    let targetAltPoint = pointOnAltAxis\n    if (diagonal) {\n      targetAltPoint = pointOnAltAxis + j\n      if (!horizontal) {\n        targetAltPoint = pointOnAltAxis - j\n        targetPoint = pointOnAxis + j\n      }\n    }\n    if (\n      gobang.filter(\n        (stone) =>\n          stone.blackStone === currentStone.blackStone &&\n          (horizontal ? stone.y : stone.x) === targetAltPoint &&\n          (horizontal ? stone.x : stone.y) === targetPoint\n      ).length >= 1\n    ) {\n      line++\n      if (line >= 5) {\n        return line++\n      }\n    } else {\n      return line\n    }\n  }\n  return line\n}\n\nfunction App() {\n  const [gobang, setGobang] = useState([])\n  const currentStone = useRef({})\n  const [BlackIsnNext, setBlackIsNext] = useState(true)\n\n  const handleOnClick = (x, y) => {\n    if (gobang.filter((stone) => stone.x === x && stone.y === y).length > 0) {\n      return\n    }\n    setGobang([{ blackStone: BlackIsnNext, x, y }, ...gobang])\n    currentStone.current = { blackStone: BlackIsnNext, x, y }\n    setBlackIsNext(!BlackIsnNext)\n  }\n\n  useEffect(() => {\n    let [line0, line45, line90, line135] = [1, 1, 1, 1]\n    const checkWin = (lineLeft, lineRight) => {\n      if (lineLeft + lineRight > 5) {\n        alert(\n          `${\n            currentStone.current.blackStone ? blackStoneIcon : whiteStoneIcon\n          } win!\nÊåâÁ¢∫ÂÆöÂæåÈáçÊñ∞ÈñãÂßã`\n        )\n        setGobang([])\n      }\n    }\n    checkWin(\n      countStones(currentStone.current, gobang, line0, [1, true], false),\n      countStones(currentStone.current, gobang, line0, [-1, true], false)\n    )\n    checkWin(\n      countStones(currentStone.current, gobang, line90, [1, false], false),\n      countStones(currentStone.current, gobang, line90, [-1, false], false)\n    )\n    checkWin(\n      countStones(currentStone.current, gobang, line135, [1, true], true),\n      countStones(currentStone.current, gobang, line135, [-1, true], true)\n    )\n    checkWin(\n      countStones(currentStone.current, gobang, line45, [1, false], true),\n      countStones(currentStone.current, gobang, line45, [-1, false], true)\n    )\n    ;[currentStone.current.x, currentStone.current.y] = [0, 0]\n  })\n  return (\n    <div>\n      <GobangTitle>\n        <h1>‰∫îÂ≠êÊ£ã</h1>\n        <h3>\n          {blackStoneIcon} vs {whiteStoneIcon}\n        </h3>\n        <div>\n          {currentStone.current.blackStone ? whiteStoneIcon : blackStoneIcon}{\" \"}\n          ÁöÑÂõûÂêà\n        </div>\n      </GobangTitle>\n      <Wrapper>\n        <Board onHandleOnclick={handleOnClick} gobang={gobang} />\n        <FakeBoard />\n      </Wrapper>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}